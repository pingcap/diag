# Default values for diag.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# timezone is the default system timzone
timezone: UTC

# diag image config
image:
  diagImage: pingcap/diag
  imageTag: latest
  
  imagePullPolicy: IfNotPresent

# diag-collector pod config
diag:
  clinicToken: ""
  clinicRegion: ""

  tlsEnabled: true
  clusterRoleEnabled: true

  clinicRole: pingcap-clinic
  serviceAccount: pingcap-clinic
 

  # We usually recommend not to specify default resources and to leave this as a conscious
  volume: {}
  # if you do not want to lose the data collected by diag-collector due to service restart
  # you can configure the PVC. uncomment the following lines,
  # adjust them as necessary, and remove the curly braces after 'volume:'.
  #  persistentVolumeClaim:
  #    claimName: local-storage-diag

  resources: {}
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  
  ## affinity defines pod scheduling rules,affinity default settings is empty.
  ## please read the affinity document before set your scheduling rule:
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}

  ## nodeSelector ensure pods only assigning to nodes which have each of the indicated key-value pairs as labels
  ## ref:https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
  nodeSelector: {}

  ## Tolerations are applied to pods, and allow pods to schedule onto nodes with matching taints.
  ## refer to https://kubernetes.io/docs/concepts/configuration/taint-and-toleration
  tolerations: []
  # - key: node-role
  #   operator: Equal
  #   value: tidb-operator
  #   effect: "NoSchedule"

  # SecurityContext is security config of this component, it will set template.spec.securityContext
  # Refer to https://kubernetes.io/docs/tasks/configure-pod-container/security-context
  securityContext: {}
  # runAsUser: 1000
  # runAsGroup: 2000
  # fsGroup: 2000

  # PodAnnotations will set template.metadata.annotations
  # Refer to https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  


# diag-api config
service:
  # server-name
  serviceName: diag-api
  # can be ClusterIP | NodePort | LoadBalancer
  type: NodePort
  sessionAffinity: None

